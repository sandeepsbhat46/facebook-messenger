{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\subbu\\\\react\\\\Projects\\\\facebook-messenger\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(''); //console.log(input)\n  //console.log(messages)\n  //useState= is a variable\n  //useEffect= run code on condition\n\n  useEffect(() => {\n    //run once when app componenet is loaded\n    db.collection('messages').orderBy('timestamp', 'desc').onSnapshot(sanpshot => {\n      setMessages(sanpshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })\n      /*usename:'abc',text:'hi'*/\n      ));\n    });\n  }, []);\n  useEffect(() => {\n    //run code here... and after , condition\n    //if its blank inside [] then, code run only once when component loaded\n    //if we have variable like input [input], its run every time input change\n    setUsername(prompt('please enter username'));\n  }, []); //condition \n\n  const sendMessage = event => {\n    event.preventDefault(); //it will prevent auto refresh when clicking submit button\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      stamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setMessages([...messages, {\n      username: username,\n      text: input\n    }]); //It will add the input to the array\n\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Facebook Messenger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"welocome \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Enter Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !input,\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: messages.map(({\n        id,\n        message\n      }) => /*#__PURE__*/_jsxDEV(Message, {\n        username: username,\n        message: message\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WE+iYOSqhhGbiPu30YDanywv2xE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/subbu/react/Projects/facebook-messenger/src/App.js"],"names":["React","useState","useEffect","Button","FormControl","Input","InputLabel","Message","db","firebase","FlipMove","App","input","setInput","messages","setMessages","username","setUsername","collection","orderBy","onSnapshot","sanpshot","docs","map","doc","id","data","prompt","sendMessage","event","preventDefault","add","message","stamp","firestore","FieldValue","serverTimestamp","text","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport logo from './logo.svg';\nimport { Button, FormControl,Input, InputLabel } from '@material-ui/core';\nimport './App.css';\nimport Message from './Message'\nimport db from './firebase';\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move';\n\nfunction App() {\n  const [input,setInput]=useState('');\n  const [messages, setMessages]=useState([])\n  const [username, setUsername]=useState('')\n\n  //console.log(input)\n  //console.log(messages)\n//useState= is a variable\n//useEffect= run code on condition\n\nuseEffect(()=>{\n  //run once when app componenet is loaded\n  db.collection('messages')\n  .orderBy('timestamp', 'desc')\n  .onSnapshot(sanpshot => {\n    setMessages(sanpshot.docs.map(doc=>({id: doc.id, data: doc.data()})/*usename:'abc',text:'hi'*/))\n  })\n}, [])\n\nuseEffect(() => {\n  //run code here... and after , condition\n  //if its blank inside [] then, code run only once when component loaded\n  //if we have variable like input [input], its run every time input change\n  setUsername(prompt('please enter username'))\n},\n  [])//condition \n\n  const sendMessage=(event)=>{\n    event.preventDefault(); //it will prevent auto refresh when clicking submit button\n\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      stamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setMessages([...messages,{username:username, text:input}]);//It will add the input to the array\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n     <h1>Facebook Messenger</h1>\n     <h2>welocome {username}</h2>\n     <form>\n        <FormControl>\n        <InputLabel>Enter Message</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)} />\n        <Button disabled={!input} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendMessage}>Send Message</Button>\n        </FormControl>\n     </form>\n  <FlipMove>\n     {\n       messages.map(({id,message})=>(\n       <Message key={id}username={username} message={message} />  \n       ))\n      }\n      </FlipMove>     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}